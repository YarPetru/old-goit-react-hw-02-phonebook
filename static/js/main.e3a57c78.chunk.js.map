{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","id","pattern","title","required","onChange","Component","Filter","inputId","labeltId","ContactList","contacts","onDeleteContact","map","onClick","App","filter","changeFilter","addContact","foundNames","contact","toLocaleLowerCase","lowerName","includes","alert","deleteContact","contactId","prevState","getVisibleContacts","lowerCasedFilter","visibleContacts","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3a57c78.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>Name</label>\n        <input\n          value={this.state.name}\n          type=\"text\"\n          name=\"name\"\n          id={this.nameInputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={this.handleChange}\n        />\n\n        <label htmlFor={this.numberInputId}>Number</label>\n        <input\n          value={this.state.number}\n          type=\"tel\"\n          name=\"number\"\n          id={this.numberInputId}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={this.handleChange}\n        />\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nconst Filter = ({ value, onChange }) => {\n  const inputId = shortid.generate();\n  const labeltId = shortid.generate();\n  return (\n    <>\n      <div>\n        <label htmlFor={labeltId}> Find contacts by name</label>\n        <input id={inputId} type=\"text\" value={value} onChange={onChange} />\n      </div>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id}>\n        <span>{name}:</span>\n        <span>{number}</span>\n        <button type=\"button\" onClick={() => onDeleteContact(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport './App.css';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  static propTypes = {};\n\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  changeFilter = evt => {\n    this.setState({ filter: evt.currentTarget.value });\n  };\n\n  addContact = ({ name, number }) => {\n    const foundNames = this.state.contacts.map(contact =>\n      contact.name.toLocaleLowerCase(),\n    );\n    const lowerName = name.toLocaleLowerCase();\n    if (foundNames.includes(lowerName)) {\n      return alert(`${name} is already in contacts`);\n    }\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const lowerCasedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(lowerCasedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1 className=\"text\">Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2 className=\"text\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}